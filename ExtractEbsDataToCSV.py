from datetime import datetime
from os import path
import os
import time
import logging
import pandas as pd
from pandas import ExcelWriter
from pandas import ExcelFile
import EBS
# import PVOExtraction
if __name__ == "__main__":
    start_time = time.perf_counter()
    username = 'apps'
    password = 'apps'
    hostname = '3.224.149.170'
    port = '1521'
    servicename = 'VIS'
    Module = 'Financials'
    SubModule = 'AR'
    SubModuleDesc = 'Account Receivable'
    #AP_objectnames = 'AP_INVOICES_ALL,AP_HOLDS_ALL,AP_HOLD_CODES,GL_LEDGERS,HZ_PARTIES,HZ_PARTY_SITES,PO_HEADERS_ALL,AP_LOOKUP_CODES,AP_INVOICE_LINES_ALL,GL_DAILY_RATES,AP_CHECKS_ALL,AP_INVOICE_PAYMENTS_ALL,AP_PAYMENT_SCHEDULES_ALL,CE_PAYMENT_DOCUMENTS,IBY_PAYMENTS_ALL,AP_TERMS_TL,GL_CODE_COMBINATIONS,IBY_PAYMENT_METHODS_TL,AP_BATCHES_ALL,AP_INVOICE_DISTRIBUTIONS_ALL,PO_DISTRIBUTIONS_ALL,PO_LINES_ALL,PO_LINE_LOCATIONS_ALL,FND_USER,XLE_ENTITY_PROFILES,XLE_REGISTRATIONS,HZ_LOCATIONS,HR_ALL_ORGANIZATION_UNITS_TL,HR_ORGANIZATION_INFORMATION,FND_CURRENCIES,FND_CURRENCIES_TL,FND_FLEX_VALUE_SETS,FND_FLEX_VALUES_VL,HR_ALL_ORGANIZATION_UNITS,HR_LOCATIONS_ALL,MTL_PARAMETERS,FND_TERRITORIES_TL,FND_LOOKUP_VALUES,MTL_SYSTEM_ITEMS_B'
    # AR_objectnames = 'GL_LEDGERS,GL_DAILY_RATES,GL_CODE_COMBINATIONS,AR_RECEIVABLE_APPLICATIONS_ALL,RA_CUSTOMER_TRX_ALL,RA_CUSTOMER_TRX_LINES_ALL,RA_CUST_TRX_LINE_GL_DIST_ALL,AR_CASH_RECEIPTS_ALL,AR_RECEIPT_METHODS,RA_CUST_TRX_TYPES_ALL,RA_TERMS_TL,AR_PAYMENT_SCHEDULES_ALL,CE_BANK_ACCT_USES_ALL,CE_BANK_ACCOUNTS,AR_ADJUSTMENTS_ALL,AR_DISTRIBUTIONS_ALL,RA_BATCH_SOURCES_ALL,FND_USER,XLE_ENTITY_PROFILES,XLE_REGISTRATIONS,HZ_LOCATIONS,HR_ALL_ORGANIZATION_UNITS_TL,HR_ORGANIZATION_INFORMATION,FND_CURRENCIES,FND_CURRENCIES_TL,FND_FLEX_VALUE_SETS,FND_FLEX_VALUES_VL,HR_ALL_ORGANIZATION_UNITS,HR_LOCATIONS_ALL,MTL_PARAMETERS,FND_TERRITORIES_TL,FND_LOOKUP_VALUES,MTL_SYSTEM_ITEMS_B'
    #objectnames = 'MTL_SYSTEM_ITEMS_B,FND_USER,FND_LOOKUP_VALUES,MTL_UNITS_OF_MEASURE_TL,MTL_PARAMETERS,JTF_RS_SALESREPS,JTF_RS_RESOURCE_EXTNS,MTL_CST_ACTUAL_COST_DETAILS,CST_ORGANIZATION_DEFINITIONS,MTL_SYSTEM_ITEMS_B,CST_ITEM_COSTS,CST_COST_TYPES,OE_ORDER_HEADERS_ALL,OE_ORDER_LINES_ALL,MTL_ONHAND_QUANTITIES_DETAIL,MTL_ITEM_LOCATIONS_KFV,MTL_MATERIAL_TRANSACTIONS,HR_ORGANIZATION_INFORMATION,RCV_TRANSACTIONS,PO_HEADERS_ALL,PO_LINES_ALL,MTL_TRANSACTION_TYPES'
    #INV_objectnames = 'CST_ORGANIZATION_DEFINITIONS,MTL_CST_ACTUAL_COST_DETAILS,MTL_ITEM_LOCATIONS_KFV,PO_HEADERS_ALL,CST_ITEM_COSTS,CST_COST_TYPES,OE_ORDER_HOLDS_ALL,OE_HOLD_SOURCES_ALL,MTL_MATERIAL_TRANSACTIONS,OE_HOLD_DEFINITIONS,MTL_TRANSACTION_TYPES,RCV_TRANSACTIONS,PO_LINES_ALL,JTF_RS_SALESREPS,JTF_RS_RESOURCE_EXTNS,OE_ORDER_HEADERS_ALL,OE_ORDER_LINES_ALL,FND_USER,FND_LOOKUP_VALUES,MTL_PARAMETERS,HR_ORGANIZATION_INFORMATION,MTL_UNITS_OF_MEASURE_TL,MTL_SYSTEM_ITEMS_B'
    #OM_objectnames ='CST_ORGANIZATION_DEFINITIONS,MTL_ONHAND_QUANTITIES_DETAIL,MTL_CST_ACTUAL_COST_DETAILS,CST_ITEM_COSTS,CST_COST_TYPES,OE_ORDER_HOLDS_ALL,JTF_RS_SALESREPS,OE_HOLD_SOURCES_ALL,OE_HOLD_DEFINITIONS,MTL_TRANSACTION_TYPES,OE_AGREEMENTS_B,OE_TRANSACTION_TYPES_TL,JTF_RS_RESOURCE_EXTNS,OE_ORDER_HEADERS_ALL,OE_ORDER_SOURCES,RA_CUSTOMER_TRX_ALL,RA_CUST_TRX_TYPES_ALL,RA_CUSTOMER_TRX_LINES_ALL,RA_SALESREPS_ALL,RA_TERMS_TL,OE_ORDER_LINES_ALL,FND_USER,FND_LOOKUP_VALUES,MTL_PARAMETERS,GL_LEDGERS,MTL_UNITS_OF_MEASURE_TL,MTL_SYSTEM_ITEMS_B'          
    # objectnames='HR_ALL_ORGANIZATION_UNITS,HR_ALL_ORGANIZATION_UNITS_TL_STG,HR_ORGANIZATION_INFORMATION,GL_LEDGERS,MTL_SYSTEM_ITEMS_B'
    objectnames = 'MTL_PARAMETERS'
    LoadType = 'F'
    # JobId='EBS_00005'
    JobId = None
    ObjectName = ''
    cwd = os.path.dirname(os.path.abspath(__file__))
    os.chdir(cwd)
    # Common Inputs
    timestamp = datetime.utcnow()
    timestamptonum = int(time.mktime(timestamp.timetuple()))
    # Type of Connections
    SourceType = 'ORACLE_EBS'
    # TargetType = 'S3'
    TargetType = 'SNOWFLAKE'
    StageType = 'S3'
    # ESS Inputs
    Hostname = 'ejru-test.fa.us6.oraclecloud.com'
    Username = 'nikila.nallola'
    Password = 'welcome20'
    Datastore_List = 'FscmTopModelAM.FinArCustomersPublicModelAM.TaxValidation,CrmAnalyticsAM.LoyaltyAM.PointAccrualsPVO'
    Storage_List = 'UCM'
    # S3 Inputs
    aws_access_key = "AKIAU7Y2V5CENGGEMN6W"
    aws_secret_key = "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"
    AWSBucketName = "BIDrive"
    AWSBucketDir = "BICC_Extracts/"
    # Snowflake Inputs
    sfuser = 'spothireddy'
    sfpassword = 'Apps@123$5'
    sfaccount = 'appsassc.us-east-1'
    sfwarehouse = 'DEMO_WH'
    sfdatabase = 'SF_TEST'
    sfschema = 'PUBLIC'
    sfrole = 'SYSADMIN'
    sfstage = 'EBS_STAGE'
    # InitialExtractDate = '01-JAN-2006'
    InitialExtractDate = None
    parallel_threads = 10
    ebs = EBS.startEBSSession(username, password, hostname, port, servicename)
    EBS.extractData(ebs, None, objectnames, LoadType, InitialExtractDate, Module, SubModuleDesc)
    # PVOExtraction.LoadEBStoSnowflake(JobId, SourceType, 'ORACLE_EBS', Module, SubModule, SubModuleDesc, LoadType, StageType, 'S3', TargetType, 'SNOWFLAKE', username, password, hostname, port, servicename, objectnames, Storage_List,
    #                                  InitialExtractDate, aws_access_key, aws_secret_key, AWSBucketName, AWSBucketDir, sfuser, sfpassword, sfaccount, sfwarehouse, sfdatabase, sfrole, sfstage, 'Srikanth Sudalagunta', 'ORG_1621420052', parallel_threads)
    print(f"Finished in {time.perf_counter() - start_time} seconds")
